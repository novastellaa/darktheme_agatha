// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
 //  directUrl = env("DIRECT_URL")
}


   model User {
     id        Int      @id @default(autoincrement())
     email     String   @unique
     password  String
     firstName String?
     lastName  String?
     createdAt DateTime @default(now())
     updatedAt DateTime @updatedAt
   }

   model ChatSettings {
  id               Int      @id @default(autoincrement())
  prompt           String
  temperature      Float
  topP             Float
  presencePenalty  Float
  frequencyPenalty Float
  maxTokens        Int
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}


   model PromptSettings {
  id               Int      @id @default(autoincrement())
  title           String
  prompt           String
  temperature      Float
  topP             Float
  presencePenalty  Float
  frequencyPenalty Float
  maxTokens        Int
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model Flow {
  id    String @id @default(cuid())
  name  String
  userId String
  userName String
  nodes String
  edges String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model File {
  id        String   @id @default(cuid())
  fileName  String
  created   DateTime @default(now())
  userId    String
  userName String
  file      String   @db.Text
}
model Promptlist {
  id               String   @id @default(cuid())
  userId           String
  username         String
  title            String
  prompt           String
  model            String
  temperature      Float
  topP             Float
  maxTokens        Int
  presencePenalty  Float
  frequencyPenalty Float
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model ChatHistory {
  id        String   @id @default(cuid())
  userId    String
  username  String
  title     String
  messages  Json
  timestamp DateTime @default(now())
  prompt    String?
}


model ChatHistoryNEW {
  id                String   @id @default(uuid())
  userId            String
  username          String
  model             String
  prompt            String   @db.Text
  titlePrompt       String
  titleChat         String
  maxTokens         Int
  topP              Float
  temperature       Float
  presencePenalty   Float
  frequencyPenalty  Float
  messages          Json[]
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model RateLimitedUsers {
  id        String   @id @default(cuid())
  userId    String
  username  String
  feature   String
  limit     Int
  timestamp DateTime @default(now())
}

model HistoryCalls {
  id        String   @id @default(cuid())
  userId    String
  username  String
  phoneNumberId String
  phoneNumber String
  contact String
  twilioPhoneNumber String
  timestamp DateTime @default(now())
}